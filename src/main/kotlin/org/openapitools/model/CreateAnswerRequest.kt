package org.openapitools.model

import com.fasterxml.jackson.annotation.JsonProperty
import io.swagger.v3.oas.annotations.media.Schema
import jakarta.validation.Valid
import jakarta.validation.constraints.*
import java.math.BigDecimal

/**
 * 
 * @param model ID of the model to use for completion. You can select one of `ada`, `babbage`, `curie`, or `davinci`.
 * @param question Question to get answered.
 * @param examples List of (question, answer) pairs that will help steer the model towards the tone and answer format you'd like. We recommend adding 2 to 3 examples.
 * @param examplesContext A text snippet containing the contextual information used to generate the answers for the `examples` you provide.
 * @param documents List of documents from which the answer for the input `question` should be derived. If this is an empty list, the question will be answered based on the question-answer examples.  You should specify either `documents` or a `file`, but not both. 
 * @param file The ID of an uploaded file that contains documents to search over. See [upload file](/docs/api-reference/files/upload) for how to upload a file of the desired format and purpose.  You should specify either `documents` or a `file`, but not both. 
 * @param searchModel ID of the model to use for [Search](/docs/api-reference/searches/create). You can select one of `ada`, `babbage`, `curie`, or `davinci`.
 * @param maxRerank The maximum number of documents to be ranked by [Search](/docs/api-reference/searches/create) when using `file`. Setting it to a higher value leads to improved accuracy but with increased latency and cost.
 * @param temperature What [sampling temperature](https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277) to use. Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer.
 * @param logprobs Include the log probabilities on the `logprobs` most likely tokens, as well the chosen tokens. For example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The API will always return the `logprob` of the sampled token, so there may be up to `logprobs+1` elements in the response.  The maximum value for `logprobs` is 5. If you need more than this, please contact us through our [Help center](https://help.openai.com) and describe your use case.  When `logprobs` is set, `completion` will be automatically added into `expand` to get the logprobs. 
 * @param maxTokens The maximum number of tokens allowed for the generated answer
 * @param stop 
 * @param n How many answers to generate for each question.
 * @param logitBias Modify the likelihood of specified tokens appearing in the completion.  Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe) (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.  As an example, you can pass `{\"50256\": -100}` to prevent the <|endoftext|> token from being generated. 
 * @param returnMetadata A special boolean flag for showing metadata. If set to `true`, each document entry in the returned JSON will contain a \"metadata\" field.  This flag only takes effect when `file` is set. 
 * @param returnPrompt If set to `true`, the returned JSON will include a \"prompt\" field containing the final prompt that was used to request a completion. This is mainly useful for debugging purposes.
 * @param expand If an object name is in the list, we provide the full information of the object; otherwise, we only provide the object ID. Currently we support `completion` and `file` objects for expansion.
 * @param user A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). 
 */
data class CreateAnswerRequest(

    @Schema(example = "null", required = true, description = "ID of the model to use for completion. You can select one of `ada`, `babbage`, `curie`, or `davinci`.")
    @get:JsonProperty("model", required = true) val model: kotlin.String,

    @get:Size(min=1)
    @Schema(example = "What is the capital of Japan?", required = true, description = "Question to get answered.")
    @get:JsonProperty("question", required = true) val question: kotlin.String,

    @get:Size(min=1,max=200) 
    @Schema(example = "[['What is the capital of Canada?', 'Ottawa'], ['Which province is Ottawa in?', 'Ontario']]", required = true, description = "List of (question, answer) pairs that will help steer the model towards the tone and answer format you'd like. We recommend adding 2 to 3 examples.")
    @get:JsonProperty("examples", required = true) val examples: kotlin.collections.List<kotlin.collections.List<kotlin.String>>,

    @Schema(example = "Ottawa, Canada's capital, is located in the east of southern Ontario, near the city of Montr√©al and the U.S. border.", required = true, description = "A text snippet containing the contextual information used to generate the answers for the `examples` you provide.")
    @get:JsonProperty("examples_context", required = true) val examplesContext: kotlin.String,

    @get:Size(max=200)
    @Schema(example = "['Japan is an island country in East Asia, located in the northwest Pacific Ocean.', 'Tokyo is the capital and most populous prefecture of Japan.']", description = "List of documents from which the answer for the input `question` should be derived. If this is an empty list, the question will be answered based on the question-answer examples.  You should specify either `documents` or a `file`, but not both. ")
    @get:JsonProperty("documents") val documents: kotlin.collections.List<kotlin.String>? = null,

    @Schema(example = "null", description = "The ID of an uploaded file that contains documents to search over. See [upload file](/docs/api-reference/files/upload) for how to upload a file of the desired format and purpose.  You should specify either `documents` or a `file`, but not both. ")
    @get:JsonProperty("file") val file: kotlin.String? = null,

    @Schema(example = "null", description = "ID of the model to use for [Search](/docs/api-reference/searches/create). You can select one of `ada`, `babbage`, `curie`, or `davinci`.")
    @get:JsonProperty("search_model") val searchModel: kotlin.String? = "ada",

    @Schema(example = "null", description = "The maximum number of documents to be ranked by [Search](/docs/api-reference/searches/create) when using `file`. Setting it to a higher value leads to improved accuracy but with increased latency and cost.")
    @get:JsonProperty("max_rerank") val maxRerank: kotlin.Int? = 200,

    @Schema(example = "null", description = "What [sampling temperature](https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277) to use. Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer.")
    @get:JsonProperty("temperature") val temperature: java.math.BigDecimal? = BigDecimal.ZERO,

    @get:Min(0)
    @get:Max(5)
    @Schema(example = "null", description = "Include the log probabilities on the `logprobs` most likely tokens, as well the chosen tokens. For example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The API will always return the `logprob` of the sampled token, so there may be up to `logprobs+1` elements in the response.  The maximum value for `logprobs` is 5. If you need more than this, please contact us through our [Help center](https://help.openai.com) and describe your use case.  When `logprobs` is set, `completion` will be automatically added into `expand` to get the logprobs. ")
    @get:JsonProperty("logprobs") val logprobs: kotlin.Int? = null,

    @Schema(example = "null", description = "The maximum number of tokens allowed for the generated answer")
    @get:JsonProperty("max_tokens") val maxTokens: kotlin.Int? = 16,

    @field:Valid
    @Schema(example = "null", description = "")
    @get:JsonProperty("stop") val stop: CreateAnswerRequestStop? = null,

    @get:Min(1)
    @get:Max(10)
    @Schema(example = "null", description = "How many answers to generate for each question.")
    @get:JsonProperty("n") val n: kotlin.Int? = 1,

    @field:Valid
    @Schema(example = "null", description = "Modify the likelihood of specified tokens appearing in the completion.  Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe) (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.  As an example, you can pass `{\"50256\": -100}` to prevent the <|endoftext|> token from being generated. ")
    @get:JsonProperty("logit_bias") val logitBias: kotlin.Any? = null,

    @Schema(example = "null", description = "A special boolean flag for showing metadata. If set to `true`, each document entry in the returned JSON will contain a \"metadata\" field.  This flag only takes effect when `file` is set. ")
    @get:JsonProperty("return_metadata") val returnMetadata: kotlin.Boolean? = false,

    @Schema(example = "null", description = "If set to `true`, the returned JSON will include a \"prompt\" field containing the final prompt that was used to request a completion. This is mainly useful for debugging purposes.")
    @get:JsonProperty("return_prompt") val returnPrompt: kotlin.Boolean? = false,

    @field:Valid
    @Schema(example = "null", description = "If an object name is in the list, we provide the full information of the object; otherwise, we only provide the object ID. Currently we support `completion` and `file` objects for expansion.")
    @get:JsonProperty("expand") val expand: kotlin.collections.List<kotlin.Any>? = arrayListOf(),

    @Schema(example = "user-1234", description = "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). ")
    @get:JsonProperty("user") val user: kotlin.String? = null
) {

}

